{
  "template.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "sensor.SENSOR_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "id_type": {
                "class": "template_::TemplateSensor",
                "parents": [
                  "sensor::Sensor",
                  "EntityBase",
                  "PollingComponent",
                  "Component"
                ]
              }
            },
            "accuracy_decimals": {
              "default": "1"
            },
            "lambda": {
              "key": "Optional"
            },
            "update_interval": {
              "key": "Optional",
              "default": "60s"
            }
          }
        }
      }
    },
    "action": {
      "publish": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "sensor::Sensor",
              "type": "use_id"
            },
            "state": {
              "key": "Required",
              "templatable": true
            }
          }
        }
      }
    }
  },
  "template.alarm_control_panel": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "alarm_control_panel.ALARM_CONTROL_PANEL_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "id_type": {
                "class": "template_::TemplateAlarmControlPanel",
                "parents": [
                  "alarm_control_panel::AlarmControlPanel",
                  "EntityBase",
                  "Component"
                ]
              }
            },
            "codes": {
              "key": "Optional",
              "is_list": true,
              "type": "string"
            },
            "requires_code_to_arm": {
              "key": "Optional",
              "type": "boolean"
            },
            "arming_home_time": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              }
            },
            "arming_night_time": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              }
            },
            "arming_away_time": {
              "key": "Optional",
              "default": "0s",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              }
            },
            "pending_time": {
              "key": "Optional",
              "default": "0s",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              }
            },
            "trigger_time": {
              "key": "Optional",
              "default": "0s",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              }
            },
            "binary_sensors": {
              "key": "Optional",
              "is_list": true,
              "type": "schema",
              "schema": {
                "config_vars": {
                  "input": {
                    "key": "Required",
                    "use_id_type": "binary_sensor::BinarySensor",
                    "type": "use_id"
                  },
                  "bypass_armed_home": {
                    "key": "Optional",
                    "default": "False",
                    "type": "boolean"
                  },
                  "bypass_armed_night": {
                    "key": "Optional",
                    "default": "False",
                    "type": "boolean"
                  }
                }
              },
              "maybe": "input"
            },
            "restore_mode": {
              "key": "Optional",
              "default": "ALWAYS_DISARMED",
              "type": "enum",
              "values": {
                "ALWAYS_DISARMED": null,
                "RESTORE_DEFAULT_DISARMED": null
              }
            }
          }
        }
      }
    }
  },
  "template.binary_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "binary_sensor.BINARY_SENSOR_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "id_type": {
                "class": "template_::TemplateBinarySensor",
                "parents": [
                  "binary_sensor::BinarySensor",
                  "EntityBase",
                  "Component"
                ]
              }
            },
            "lambda": {
              "key": "Optional"
            }
          }
        }
      }
    },
    "action": {
      "publish": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "binary_sensor::BinarySensor",
              "type": "use_id"
            },
            "state": {
              "key": "Required",
              "templatable": true,
              "type": "boolean"
            }
          }
        }
      }
    }
  },
  "template.button": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "button.BUTTON_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "template_::TemplateButton",
                "parents": [
                  "button::Button",
                  "EntityBase"
                ]
              }
            }
          }
        }
      }
    }
  },
  "template.cover": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "cover.COVER_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "id_type": {
                "class": "template_::TemplateCover",
                "parents": [
                  "cover::Cover",
                  "EntityBase",
                  "Component"
                ]
              }
            },
            "lambda": {
              "key": "Optional"
            },
            "optimistic": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "assumed_state": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "has_position": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "open_action": {
              "key": "Optional",
              "type": "trigger"
            },
            "close_action": {
              "key": "Optional",
              "type": "trigger"
            },
            "stop_action": {
              "key": "Optional",
              "type": "trigger"
            },
            "tilt_action": {
              "key": "Optional",
              "type": "trigger"
            },
            "tilt_lambda": {
              "key": "Optional"
            },
            "position_action": {
              "key": "Optional",
              "type": "trigger"
            },
            "restore_mode": {
              "key": "Optional",
              "default": "RESTORE",
              "type": "enum",
              "values": {
                "NO_RESTORE": null,
                "RESTORE": null,
                "RESTORE_AND_CALL": null
              }
            }
          }
        }
      }
    },
    "action": {
      "publish": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "cover::Cover",
              "type": "use_id"
            },
            "state": {
              "key": "Optional",
              "templatable": true,
              "type": "enum",
              "values": {
                "OPEN": null,
                "CLOSED": null
              }
            },
            "position": {
              "key": "Optional",
              "templatable": true,
              "data_type": "zero_to_one_float"
            },
            "current_operation": {
              "key": "Optional",
              "templatable": true,
              "type": "enum",
              "values": {
                "IDLE": null,
                "OPENING": null,
                "CLOSING": null
              }
            },
            "tilt": {
              "key": "Optional",
              "templatable": true,
              "data_type": "zero_to_one_float"
            }
          }
        }
      }
    }
  },
  "template.lock": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "lock.LOCK_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "template_::TemplateLock",
                "parents": [
                  "lock::Lock",
                  "EntityBase",
                  "Component"
                ]
              }
            },
            "lambda": {
              "key": "Optional"
            },
            "optimistic": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "assumed_state": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "unlock_action": {
              "key": "Optional",
              "type": "trigger"
            },
            "lock_action": {
              "key": "Optional",
              "type": "trigger"
            },
            "open_action": {
              "key": "Optional",
              "type": "trigger"
            }
          }
        }
      }
    },
    "action": {
      "publish": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "lock::Lock",
              "type": "use_id"
            },
            "state": {
              "key": "Required",
              "templatable": true,
              "type": "enum",
              "values": {
                "LOCKED": null,
                "UNLOCKED": null,
                "JAMMED": null,
                "LOCKING": null,
                "UNLOCKING": null
              }
            }
          }
        }
      }
    }
  },
  "template.number": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "number.NUMBER_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "template_::TemplateNumber",
                "parents": [
                  "number::Number",
                  "EntityBase",
                  "PollingComponent",
                  "Component"
                ]
              }
            },
            "max_value": {
              "key": "Required"
            },
            "min_value": {
              "key": "Required"
            },
            "step": {
              "key": "Required",
              "data_type": "positive_float"
            },
            "lambda": {
              "key": "Optional"
            },
            "optimistic": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "set_action": {
              "key": "Optional",
              "type": "trigger"
            },
            "initial_value": {
              "key": "Optional"
            },
            "restore_value": {
              "key": "Optional",
              "type": "boolean"
            },
            "update_interval": {
              "key": "Optional",
              "default": "60s"
            }
          }
        }
      }
    }
  },
  "template.output": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "typed",
        "types": {
          "binary": {
            "extends": [
              "output.BINARY_OUTPUT_SCHEMA"
            ],
            "config_vars": {
              "id": {
                "key": "GeneratedID",
                "id_type": {
                  "class": "template_::TemplateBinaryOutput",
                  "parents": [
                    "output::BinaryOutput"
                  ]
                }
              },
              "write_action": {
                "key": "Required",
                "type": "trigger"
              }
            }
          },
          "float": {
            "extends": [
              "output.FLOAT_OUTPUT_SCHEMA"
            ],
            "config_vars": {
              "id": {
                "key": "GeneratedID",
                "id_type": {
                  "class": "template_::TemplateFloatOutput",
                  "parents": [
                    "output::FloatOutput",
                    "output::BinaryOutput"
                  ]
                }
              },
              "write_action": {
                "key": "Required",
                "type": "trigger"
              }
            }
          }
        },
        "typed_key": "type"
      }
    }
  },
  "template.select": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "select.SELECT_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "id_type": {
                "class": "template_::TemplateSelect",
                "parents": [
                  "select::Select",
                  "EntityBase",
                  "PollingComponent",
                  "Component"
                ]
              }
            },
            "options": {
              "key": "Required",
              "is_list": true,
              "type": "string"
            },
            "lambda": {
              "key": "Optional"
            },
            "optimistic": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "set_action": {
              "key": "Optional",
              "type": "trigger"
            },
            "initial_option": {
              "key": "Optional",
              "type": "string"
            },
            "restore_value": {
              "key": "Optional",
              "type": "boolean"
            },
            "update_interval": {
              "key": "Optional",
              "default": "60s"
            }
          }
        }
      }
    }
  },
  "template.switch": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "switch._SWITCH_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "restore_mode": {
              "key": "Optional",
              "default": "ALWAYS_OFF",
              "type": "enum",
              "values": {
                "RESTORE_DEFAULT_OFF": null,
                "RESTORE_DEFAULT_ON": null,
                "ALWAYS_OFF": null,
                "ALWAYS_ON": null,
                "RESTORE_INVERTED_DEFAULT_OFF": null,
                "RESTORE_INVERTED_DEFAULT_ON": null,
                "DISABLED": null
              }
            },
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "template_::TemplateSwitch",
                "parents": [
                  "switch_::Switch",
                  "EntityBase",
                  "Component"
                ]
              }
            },
            "lambda": {
              "key": "Optional"
            },
            "optimistic": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "assumed_state": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "turn_off_action": {
              "key": "Optional",
              "type": "trigger"
            },
            "turn_on_action": {
              "key": "Optional",
              "type": "trigger"
            }
          }
        }
      }
    },
    "action": {
      "publish": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "switch_::Switch",
              "type": "use_id"
            },
            "state": {
              "key": "Required",
              "templatable": true,
              "type": "boolean"
            }
          }
        }
      }
    }
  },
  "template.text_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "text_sensor.TEXT_SENSOR_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "id_type": {
                "class": "template_::TemplateTextSensor",
                "parents": [
                  "text_sensor::TextSensor",
                  "EntityBase",
                  "PollingComponent",
                  "Component"
                ]
              }
            },
            "lambda": {
              "key": "Optional"
            },
            "update_interval": {
              "key": "Optional",
              "default": "60s"
            }
          }
        }
      }
    },
    "action": {
      "publish": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "text_sensor::TextSensor",
              "type": "use_id"
            },
            "state": {
              "key": "Required",
              "templatable": true,
              "type": "string"
            }
          }
        }
      }
    }
  }
}