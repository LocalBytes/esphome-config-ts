{
  "mqtt": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "mqtt::MQTTClientComponent",
                "parents": [
                  "Component"
                ]
              }
            },
            "broker": {
              "key": "Required",
              "type": "string"
            },
            "port": {
              "key": "Optional",
              "default": "1883",
              "type": "integer",
              "data_type": "port"
            },
            "username": {
              "key": "Optional",
              "default": "",
              "type": "string"
            },
            "password": {
              "key": "Optional",
              "default": "",
              "type": "string"
            },
            "client_id": {
              "key": "Optional",
              "type": "string"
            },
            "idf_send_async": {
              "key": "Optional",
              "type": "boolean"
            },
            "certificate_authority": {
              "key": "Optional",
              "type": "string"
            },
            "skip_cert_cn_check": {
              "key": "Optional",
              "type": "boolean"
            },
            "discovery": {
              "key": "Optional",
              "default": "True",
              "type": "enum",
              "values": {
                "CLEAN": null
              }
            },
            "discovery_retain": {
              "key": "Optional",
              "default": "True",
              "type": "boolean"
            },
            "discovery_prefix": {
              "key": "Optional",
              "default": "homeassistant"
            },
            "discovery_unique_id_generator": {
              "key": "Optional",
              "default": "legacy",
              "type": "enum",
              "values": {
                "legacy": null,
                "mac": null
              }
            },
            "discovery_object_id_generator": {
              "key": "Optional",
              "default": "none",
              "type": "enum",
              "values": {
                "none": null,
                "device_name": null
              }
            },
            "use_abbreviations": {
              "key": "Optional",
              "default": "True",
              "type": "boolean"
            },
            "birth_message": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "mqtt.MQTT_MESSAGE_SCHEMA"
                ]
              }
            },
            "will_message": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "mqtt.MQTT_MESSAGE_SCHEMA"
                ]
              }
            },
            "shutdown_message": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "mqtt.MQTT_MESSAGE_SCHEMA"
                ]
              }
            },
            "topic_prefix": {
              "key": "Optional"
            },
            "log_topic": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "mqtt.MQTT_MESSAGE_BASE"
                ],
                "config_vars": {
                  "level": {
                    "key": "Optional",
                    "type": "enum",
                    "values": {
                      "NONE": null,
                      "ERROR": null,
                      "WARN": null,
                      "INFO": null,
                      "DEBUG": null,
                      "VERBOSE": null,
                      "VERY_VERBOSE": null
                    }
                  }
                }
              }
            },
            "ssl_fingerprints": {
              "key": "Optional",
              "is_list": true
            },
            "keepalive": {
              "key": "Optional",
              "default": "15s",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              }
            },
            "reboot_timeout": {
              "key": "Optional",
              "default": "15min",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              }
            },
            "on_connect": {
              "key": "Optional",
              "type": "trigger"
            },
            "on_disconnect": {
              "key": "Optional",
              "type": "trigger"
            },
            "on_message": {
              "key": "Optional",
              "type": "trigger",
              "schema": {
                "config_vars": {
                  "topic": {
                    "key": "Required"
                  },
                  "qos": {
                    "key": "Optional",
                    "default": "0"
                  },
                  "payload": {
                    "key": "Optional",
                    "type": "string"
                  },
                  "then": {
                    "type": "trigger"
                  }
                }
              },
              "has_required_var": true
            },
            "on_json_message": {
              "key": "Optional",
              "type": "trigger",
              "schema": {
                "config_vars": {
                  "topic": {
                    "key": "Required"
                  },
                  "qos": {
                    "key": "Optional",
                    "default": "0"
                  },
                  "then": {
                    "type": "trigger"
                  }
                }
              },
              "has_required_var": true
            }
          }
        }
      },
      "MQTT_MESSAGE_BASE": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "topic": {
              "key": "Required"
            },
            "qos": {
              "key": "Optional",
              "default": "0"
            },
            "retain": {
              "key": "Optional",
              "default": "True",
              "type": "boolean"
            }
          }
        }
      },
      "MQTT_MESSAGE_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "mqtt.MQTT_MESSAGE_BASE"
          ],
          "config_vars": {
            "payload": {
              "key": "Required"
            }
          }
        }
      }
    },
    "action": {
      "publish": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "mqtt::MQTTClientComponent",
              "type": "use_id"
            },
            "topic": {
              "key": "Required",
              "templatable": true
            },
            "payload": {
              "key": "Required",
              "templatable": true
            },
            "qos": {
              "key": "Optional",
              "default": "0",
              "templatable": true
            },
            "retain": {
              "key": "Optional",
              "default": "False",
              "templatable": true,
              "type": "boolean"
            }
          }
        }
      },
      "publish_json": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "mqtt::MQTTClientComponent",
              "type": "use_id"
            },
            "topic": {
              "key": "Required",
              "templatable": true
            },
            "payload": {
              "key": "Required"
            },
            "qos": {
              "key": "Optional",
              "default": "0",
              "templatable": true
            },
            "retain": {
              "key": "Optional",
              "default": "False",
              "templatable": true,
              "type": "boolean"
            }
          }
        }
      }
    },
    "condition": {
      "connected": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "mqtt::MQTTClientComponent",
              "type": "use_id"
            }
          }
        }
      }
    }
  }
}